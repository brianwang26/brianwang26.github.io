{"version":3,"sources":["Dog.js","App.js","serviceWorker.js","index.js","bed.jpg","basketball.jpeg","kayak.jpeg","tokyo.jpeg"],"names":["Dog","props","changeState","setState","breed","state","this","name","onClick","Component","App","className","color","src","bed","basketball","kayak","width","height","tokyo","href","target","rel","type","onclick","console","log","font-weight","contentStyle","background","contentArrowStyle","borderRight","iconStyle","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.8ffc47a5.chunk.js","sourcesContent":["import React, { Component } from 'react'; \n\nclass Dog extends Component {\n    constructor(props) {\n        super(props); \n        this.state = {breed:\"Chihuahua\"}; \n    }\n    changeState = () => {\n        this.setState({breed: \"hello\"})\n    }\n\n    render() {\n        return (\n            <div>\n                <p> I am the Dog Component</p>\n                <p> The dog type is {this.state.breed}</p>\n                <p> The name of the dog is {this.props.name}</p>\n                <button onClick={this.changeState}>Click Me</button>\n            </div>\n        )\n    }\n}\n\nexport default Dog; ","import React from 'react';\nimport bed from './bed.jpg';\nimport basketball from './basketball.jpeg';\nimport kayak from './kayak.jpeg';\nimport tokyo from './tokyo.jpeg';\nimport styles from './Styles.css'\nimport './App.css'; \nimport Dog from './Dog';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\nfunction App() {\n\n  // var name = \"Trump\";\n\n  // var component = null; \n  // if (name == \"Brian\") {\n  //   component = <p>I am the greatest person on earth</p>\n  // }\n  // else {\n  //   component = <p>I am not the greatest person in the world</p>\n  //   console.log(\"He's not Brian\")\n  // }\n  \n  // var component1 = name != \"Trump\"\n  // ? <p>You are not the savior of our nation</p>\n  // : <p>You are the savior of our nation</p>\n\n  // var buttonFunction =  () => {\n  //   console.log(\"This is working very well\")\n  //   console.log(name == \"Brian\")\n  // }\n\n  // var onChangeFunction = (event) => {\n  //   console.log(event.target.value)\n  // }\n\n  // var myList = [\"Tadashi\", \"April\", \"October\"]\n  \n  // var dogMap = myList.map(\n  //   (name) => { \n  //     return <p className = \"doggy\"> hi {name} !</p>;\n  //   }\n  // )\n\n  // var october = {\n  //   name: \"October Bowman\", \n  //   age: 12, \n  //   activity: \"Living Outside\",\n  //   color: \"black\"\n  // }\n\n  // var april = {\n  //   name: \"April Chan\", \n  //   age: 1, \n  //   activity: \"Eating Food\",\n  //   color: \"gold\"\n  // }\n\n  // var newList = [october, april];\n\n  // var dogMap2 = newList.map(\n  //   (dog) => {\n  //     return <p className=\"doggy\"> {dog.name} likes {dog.activity}!</p>\n  //   }\n  // )\n\n  function myFunction() {\n    // Get the checkbox\n    var checkBox = document.getElementById(\"myCheck\");\n    // Get the output text\n    var text = document.getElementById(\"text\");\n  \n    // If the checkbox is checked, display the output text\n    if (checkBox.checked == true){\n      text.style.display = \"block\";\n    } else {\n      text.style.display = \"none\";\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1> Brian Wang </h1>\n        <Dog name=\"Oscar\"> </Dog>\n        <h2><font color=\"fuchsia\">Who I am</font></h2>\n        <p> <font color = \"lime\">My name is Brian Wang and I am currently a first-year student at Dartmouth College. At Dartmouth, I am doing a double major \n          in computer science and economics modified with math. Due to the coronavirus, this spring term, I am <code>coding</code> from the comforts of my \n          home in Fremont, California in the San Francisco Bay Area.</font></p>\n        <img src={bed} />\n        <figcaption><font color = \"yellow\"> Me @ home during 20S </font> </figcaption>\n        <h2><font color = \"red\">What I like</font></h2>\n        <p><font color = \"aqua\">Though I'm not very good at it, I love watching and playing the game of <b>basketball.</b> Fun Fact: I even have a \n        Little Tikes Hoop in my house which I've elevated to 7 feet, and my friends come and play on it sometimes. </font> </p> \n        <img src={basketball} />\n        <figcaption><font color = \"fuchsia\">Me ballin'</font></figcaption>\n        <p><font color = 'lime'>I also love canoeing, kayaking, and anything else to do with water.</font></p>\n        <img src={kayak} width=\"2000\" height=\"1500\"/>\n        <figcaption><font color = \"yellow\">Kayaking on the Williamette River in Portland, Oregon</font></figcaption>\n        <p><font color = \"red\"> I also enjoy hanging out with my brother, David. He's now 24-years old but we \n        still act like children when we're around each other.</font></p>\n        <img src = {tokyo} />\n        <figcaption><font color = \"aqua\"> My brother and I</font></figcaption>\n        <h2><font color = \"fuchsia\">My Favorite Internet Things</font></h2>\n        <ul>\n        <li><a\n          className=\"App-link\"\n          href=\"https://www.buzzfeed.com/daves4/how-many-five-year-olds-can-you-take-in-a-fight\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          How many five year olds can you fight?\n        </a></li>\n        <li><a\n          className=\"App-link\"\n          href=\"https://worldmapper.org/maps/?_sft_product_cat=population-atlas\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          World population atlas \n        </a></li>\n        <li><a\n          className=\"App-link\"\n          href=\"https://coronavirus.jhu.edu/map.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Coronavirus Map: stay informed!!\n        </a></li>\n        </ul>\n        {/* <button onClick={buttonFunction}>\n          Brian Wang's Internet History\n        </button>\n        <input type=\"text\" onChange = {onChangeFunction}/>\n        <div className = \"dogContainer\">\n          {dogMap}\n          {dogMap2}\n        </div>\n        {component}\n        {component1} */}\n\n        <h4><font color = \"aqua\"> Tell me about yourself</font></h4>\n        <div className = \"questionnaire\"> \n          Name: <input type=\"text\"></input>\n          Email: <input type=\"text\"></input>\n          Social-Security Number: <input type=\"text\"></input>\n        </div>\n\n        Checkbox: <input type=\"checkbox\" onclick=\"myFunction()\"></input>\n\n        <h4><font color = \"white\"> What are you right now? </font></h4>\n        <div className = \"buttonContainer\">\n        <button onClick={console.log(\"Happy\")}>\n          Happy!\n        </button>\n        <button onClick={console.log(\"Sad\")}>\n          Sad  \n        </button>\n        <button onClick={console.log(\"Excited\")}>\n          Excited\n        </button>\n        <button onClick={console.log(\"Nervous\")}>\n          Nervous\n        </button>\n        <button onClick={console.log(\"Tired\")}>\n          Tired\n        </button>\n        <button onClick={console.log(\"Hungry\")}>\n          Hungry\n        </button>\n        </div>\n        <p>  </p> \n\n        {/* Uses Vertical Timeline Element to construct visual timeline of projects */}\n        <div className = \"projects\">\n          <h1><font color = \"black\" font-weight = \"bold\"> Projects </font></h1>\n        </div>\n        <div></div>\n        <VerticalTimeline>\n\n          <VerticalTimelineElement\n              className=\"vertical-timeline-element--education\"\n              contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n              contentArrowStyle={{ borderRight: '10px solid  rgb(33, 150, 243)' }}\n              iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n            >\n            <h1 className=\"vertical-timeline-element-title\">DartPoll</h1>\n            <p></p>\n            <h7 className=\"vertical-timeline-element-subtitle\">April 2020-Present</h7>\n            <p> Worked in a team of 4 to build a platform where Dartmouth students can pose and respond to polls. </p>\n            <p> Tools Using: React, CSS, Firebase, Chart.js, Moment.js, SVG, Figma </p>\n            <a className=\"App-link\" href=\"https://github.com/msorbaro/coast-to-coast\" target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub Repository\n             </a>\n            </VerticalTimelineElement>\n\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--education\"\n              contentStyle={{ background: 'rgb(34, 139, 34)', color: '#fff' }}\n              contentArrowStyle={{ borderRight: '10px solid  rgb(33, 150, 243)' }}\n              iconStyle={{ background: 'rgb(34, 139, 34)', color: '#fff' }}\n            >\n            <h1 className=\"vertical-timeline-element-title\">The Dartmouth Mobile App</h1>\n            <p></p>\n            <h7 className=\"vertical-timeline-element-subtitle\">April 2020-Present</h7>\n            <p> Hired to help build our campus newspaper. </p>\n            <p> Tools Using: React Native, Express, MongoDB </p>\n            </VerticalTimelineElement>\n\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--education\"\n              contentStyle={{ background: 'rgb(255, 99, 71)', color: '#fff' }}\n              contentArrowStyle={{ borderRight: '10px solid  rgb(33, 150, 243)' }}\n              iconStyle={{ background: 'rgb(255, 99, 71)', color: '#fff' }}\n            >\n            <h1 className=\"vertical-timeline-element-title\">This Website</h1>\n            <p></p>\n            <h7 className=\"vertical-timeline-element-subtitle\">March 2020-Present</h7>\n            <p> Building the website you are currently on! </p>\n            <p> Tools Using: React, CSS </p>\n            <a className=\"App-link\" href=\"https://github.com/brianwang26/brianwang26.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub Repository\n             </a>\n            </VerticalTimelineElement>\n\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--education\"\n              contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n              contentArrowStyle={{ borderRight: '10px solid  rgb(33, 150, 243)' }}\n              iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n            >\n            <h1 className=\"vertical-timeline-element-title\">Dartmouth Trends</h1>\n            <p></p>\n            <h7 className=\"vertical-timeline-element-subtitle\">March 2020-Present</h7>\n            <p> Building a website that allows Dartmouth administration and students to understand grade distribution and enrollment patterns of classes and academic departments. </p>\n            <p> Tools Using: Python, BeautifulSoup, Pandas, Matplotlib, React, Flask </p>\n            <a className=\"App-link\" href=\"https://github.com/brianwang26/DartmouthTrends\" target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub Repository\n             </a>\n            </VerticalTimelineElement>\n\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--education\"\n              contentStyle={{ background: 'rgb(34, 139, 34)', color: '#fff' }}\n              contentArrowStyle={{ borderRight: '10px solid  rgb(33, 150, 243)' }}\n              iconStyle={{ background: 'rgb(34, 139, 34)', color: '#fff' }}\n            >\n            <h1 className=\"vertical-timeline-element-title\">myCan</h1>\n            <p></p>\n            <h7 className=\"vertical-timeline-element-subtitle\">July 2018-August 2018</h7>\n            <p> Building a website that allows Dartmouth administration and students to understand grade distribution and enrollment patterns of classes and academic departments. </p>\n            <p> Tools Using: Python, BeautifulSoup, Pandas, Matplotlib, React, Flask </p>\n            <a className=\"App-link\" href=\"https://github.com/brianwang26/DartmouthTrends\" target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub Repository\n             </a>\n            </VerticalTimelineElement>\n\n            <VerticalTimelineElement\n              className=\"vertical-timeline-element--education\"\n              contentStyle={{ background: 'rgb(255, 99, 71)', color: '#fff' }}\n              contentArrowStyle={{ borderRight: '10px solid  rgb(33, 150, 243)' }}\n              iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n            >\n            <h1 className=\"vertical-timeline-element-title\">iPaint</h1>\n            <p></p>\n            <h7 className=\"vertical-timeline-element-subtitle\">July 2018</h7>\n            <p> Building a website that allows Dartmouth administration and students to understand grade distribution and enrollment patterns of classes and academic departments. </p>\n            <p> Tools Using: Python, BeautifulSoup, Pandas, Matplotlib, React, Flask </p>\n            <a className=\"App-link\" href=\"https://github.com/brianwang26/DartmouthTrends\" target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub Repository\n             </a>\n            </VerticalTimelineElement>\n\n  \n      </VerticalTimeline>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bed.c386c42a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/basketball.9e285155.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kayak.48b4bcf7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tokyo.8f463c9e.jpeg\";"],"sourceRoot":""}